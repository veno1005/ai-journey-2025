# -*- coding: utf-8 -*-
"""day15_banking_dashboard.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vkbG1Y6YgiOojRsJFE5KkJmfJC2V-yUg
"""

!pip install streamlit matplotlib
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import requests

st.set_page_config(page_title="Banking Dashboard", layout="wide")

# -------------------------------
# Load Dummy Transactions from API
# -------------------------------
@st.cache_data
def load_data():
    # Public Mockaroo API (no auth needed for up to 200 rows)
    url = "https://my.api.mockaroo.com/banking.json?key=25b60f40"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        df = pd.DataFrame(data)
        df["Date"] = pd.to_datetime(df["Date"])
        df = df.sort_values("Date")
        # Running balance
        df["Balance"] = df["Amount"].cumsum() + 5000
        return df
    else:
        st.error("‚ö†Ô∏è Failed to fetch dummy transactions")
        return pd.DataFrame()

# -------------------------------
# Dashboard
# -------------------------------
st.title("üè¶ Banking Dashboard (Live Dummy Data)")
st.caption("Day 15 ‚Äî Transactions from Mockaroo API")

# Load data
df = load_data()

if not df.empty:
    # Show recent transactions
    st.subheader("üìí Recent Transactions")
    st.dataframe(df.tail(10), use_container_width=True)

    # Balance
    st.subheader("üíµ Current Balance")
    latest_balance = df["Balance"].il

with open("day15_banking_dashboard.py", "w") as f:
    f.write(code)

print("‚úÖ Saved as day15_banking_dashboard.py")


!wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
!dpkg -i cloudflared-linux-amd64.deb

!streamlit run day15_banking_dashboard.py & cloudflared tunnel --url http://localhost:8501 --no-autoupdate